## What is Cazuela?

Cazuela is a lightweight SOA Framework written in PHP that allows you to export data to common formats such as JSON/XML/YAML. PDO used as data layer.

It can be used to interconnect systems, such as middleware platform, such as API layer or whatever you can think of!

## Requirements

- Apache 2.x or Nginx 1.x
- Rewrite mod (mod_rewrite)
- PHP > 5.3.x (with PDO, Reflection support)
- PHP DOMDocument (for XML parsing) 
- YAML module for PHP (if you pretend YAML support)

## Cache engine requeriments

- Memcache module (http://pecl.php.net/package/memcache)
- APC module (http://pecl.php.net/package/APC)

## Supported Databases

For now only MySQL and PostgreSQL databases.

## How to use? (Wiki is still under construction)

1- Change the connection settings in /app/config/Config.php

2- See the example service in the app/services/Test.php

3- Then in your favorite browser: http://domain/Test/getTest.(xml/json/yml)

4- If you pretend to serve multiple apps with one Cazuela installation, please change (for each app) the CAZUELA_BASE constant in app/webroot/index.php 

## Troubleshooting

Please refer to https://github.com/maraya/cazuela/wiki/ErrorCodes

## TODO

- Console interface to cook a Cazuela
- ORM support
- Cache support (xcache?, wincache?)
- Oracle and SQLite database support

## Timeline

0.3.1 - New features

- APC support
- delete method in CazuelaCache Class
- Request object on ServiceBase (for request-type checking)
- CAZUELA_APP global var (app name)

0.3 - New features

- Memcache support

0.2.1 - Bugfixes

- New class for data parsing (uses DOMDocument)
- CDATA on string type vars
- New directory hierarchy

0.2 - Bugfixes

- output_buffering issue (bad headers)
- ksort() issue on parameters order
- adds JSON indent support
- Services now extends ServiceBase class
- beforeCall, afterCall methods for overriding (on ServiceBase class)

0.1 - Initial version
